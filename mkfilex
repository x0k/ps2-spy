#!/bin/bash -e

env:
  if [ -f .env.local ]
  then
    export $(cat .env.local | xargs)
  fi
  if [ -d ~/Sync/ps2-spy ]
  then
    export DISCORD_TOKEN=$(cat ~/Sync/ps2-spy/test-token)
    export CENSUS_SERVICE_ID=$(cat ~/Sync/ps2-spy/test-service)
  fi
  export STREAMING_ENDPOINT=wss://push.nanite-systems.net/streaming

# Dev
d: env
  go run cmd/ps2-spy/*.go --config config/dev.yml

# Build bin
b:
  go build -tags "migrate" -o bin/app cmd/ps2-spy/main.go

t:
  go test ./...

debug-env: env
    env > .env.debug.local

## DATABASE

db:
  sqlc generate

# Database queries lint
qlint:
  sqlc vet

# Migration create
migration: env
  migrate create -ext sql -dir db/migrations -seq $1

migrate-down:
  migrate -source file://db/migrations -database sqlite3://storage/storage.db down 1

text:
  go generate ./internal/translations/translations.go

# Preview
# Run compiled binary
p:
  DISCORD_TOKEN=$(cat ~/Sync/ps2-spy/test-token) \
    CENSUS_SERVICE_ID=$(cat ~/Sync/ps2-spy/test-service) \
    .bin/app --config config/dev.yml

prof:
  go tool pprof -http :8081 "$(cat ~/Sync/ps2-spy/prof-address)/debug/pprof/$1"

test:
  go test ./...

lint:
  golangci-lint run ./...

up:
  USER_ID="$(id -u)" docker-compose -f monitoring/docker-compose.yml up -d

down:
  docker-compose -f monitoring/docker-compose.yml down

o:
  go run tools/explorer/*.go --resource outfit --query $1 --output tmp

os:
  go run tools/explorer/*.go --resource outfits --query $1 --output tmp

c:
  go run tools/explorer/*.go --resource character --query $1 --output tmp

cs:
  go run tools/explorer/*.go --resource characters --query $1 --output tmp

ms:
  go run tools/explorer/*.go --resource members --query $1 --output tmp

ws:
  go run tools/explorer/*.go --resource world --query $1 --output tmp
